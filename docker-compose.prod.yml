version: '2'
services:
  media:
    extends:
      file: docker-compose.base.yml
      service: media

  nginx-media:
    extends:
      file: docker-compose.base.yml
      service: nginx
    volumes:
      - ./conf/prod/nginx/media:/etc/nginx/sites-enabled
    volumes_from:
      - media
      - app
    links:
      - app
    ports:
      - "8000:80"

  nginx-static:
    extends:
      file: docker-compose.base.yml
      service: nginx
    volumes:
      -  ./conf/prod/nginx/static:/etc/nginx/sites-enabled
    volumes_from:
      - media
      - app
    links:
      - app
    ports:
      - "9000:80"

  rabbitmq:
    extends:
      file: docker-compose.base.yml
      service: rabbitmq
    ports:
      - "15672"
      - "5672"
    environment:
      - RABBITMQ_USER_PASSWD=user:f1b0nacc1

  mongo:
    extends:
      file: docker-compose.base.yml
      service: mongo
    ports:
      - "27017"

  app:
    extends:
      file: docker-compose.base.yml
      service: app
    image: askhatomarov/happ:latest
    command: bash -c "python manage.py collectstatic --no-input && uwsgi --ini uwsgi.ini"
    environment:
      - DJANGO_SETTINGS_MODULE=happ.settings.prod
      - RABBITMQ_ENV_RABBITMQ_USER_PASSWD=user:f1b0nacc1
    links:
      - mongo
      - rabbitmq
    working_dir: /happ
    volumes:
      - /happ
    volumes_from:
      - media
    ports:
      - "8000"

  celery:
    extends:
      file: docker-compose.base.yml
      service: celery
    image: askhatomarov/happ:latest
    command: bash -c "DJANGO_SETTINGS_MODULE=happ.settings.prod celery -A happ worker -l debug --concurrency=2"
    environment:
      - DJANGO_SETTINGS_MODULE=happ.settings.prod
      - RABBITMQ_ENV_RABBITMQ_USER_PASSWD=user:f1b0nacc1
    links:
      - mongo
      - rabbitmq
